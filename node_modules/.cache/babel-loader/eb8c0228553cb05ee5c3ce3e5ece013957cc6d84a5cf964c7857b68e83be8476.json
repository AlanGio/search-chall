{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { html, body } from '../CssBaseline/CssBaseline';\nimport { getScopedCssBaselineUtilityClass } from './scopedCssBaselineClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getScopedCssBaselineUtilityClass, classes);\n};\nconst ScopedCssBaselineRoot = styled('div', {\n  name: 'MuiScopedCssBaseline',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const colorSchemeStyles = {};\n  if (theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      const selector = theme.getColorSchemeSelector(key);\n      if (selector.startsWith('@')) {\n        colorSchemeStyles[selector] = {\n          colorScheme: scheme.palette?.mode\n        };\n      } else {\n        colorSchemeStyles[`&${selector.replace(/\\s*&/, '')}`] = {\n          colorScheme: scheme.palette?.mode\n        };\n      }\n    });\n  }\n  return {\n    ...html(theme, false),\n    ...body(theme),\n    '& *, & *::before, & *::after': {\n      boxSizing: 'inherit'\n    },\n    '& strong, & b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    variants: [{\n      props: {\n        enableColorScheme: true\n      },\n      style: theme.vars ? colorSchemeStyles : {\n        colorScheme: theme.palette.mode\n      }\n    }]\n  };\n});\nconst ScopedCssBaseline = /*#__PURE__*/React.forwardRef(function ScopedCssBaseline(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiScopedCssBaseline'\n  });\n  const {\n    className,\n    component = 'div',\n    enableColorScheme,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ScopedCssBaselineRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ScopedCssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   */\n  enableColorScheme: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ScopedCssBaseline;","map":{"version":3,"names":["React","PropTypes","clsx","composeClasses","styled","useDefaultProps","html","body","getScopedCssBaselineUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","ScopedCssBaselineRoot","name","slot","overridesResolver","props","styles","theme","colorSchemeStyles","colorSchemes","Object","entries","forEach","key","scheme","selector","getColorSchemeSelector","startsWith","colorScheme","palette","mode","replace","boxSizing","fontWeight","typography","fontWeightBold","variants","enableColorScheme","style","vars","ScopedCssBaseline","forwardRef","inProps","ref","className","component","other","as","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","bool","sx","oneOfType","arrayOf","func"],"sources":["/Users/alangiojelli/Repos/coding-challenge-search-ui/node_modules/@mui/material/ScopedCssBaseline/ScopedCssBaseline.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { html, body } from '../CssBaseline/CssBaseline';\nimport { getScopedCssBaselineUtilityClass } from './scopedCssBaselineClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getScopedCssBaselineUtilityClass, classes);\n};\nconst ScopedCssBaselineRoot = styled('div', {\n  name: 'MuiScopedCssBaseline',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const colorSchemeStyles = {};\n  if (theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      const selector = theme.getColorSchemeSelector(key);\n      if (selector.startsWith('@')) {\n        colorSchemeStyles[selector] = {\n          colorScheme: scheme.palette?.mode\n        };\n      } else {\n        colorSchemeStyles[`&${selector.replace(/\\s*&/, '')}`] = {\n          colorScheme: scheme.palette?.mode\n        };\n      }\n    });\n  }\n  return {\n    ...html(theme, false),\n    ...body(theme),\n    '& *, & *::before, & *::after': {\n      boxSizing: 'inherit'\n    },\n    '& strong, & b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    variants: [{\n      props: {\n        enableColorScheme: true\n      },\n      style: theme.vars ? colorSchemeStyles : {\n        colorScheme: theme.palette.mode\n      }\n    }]\n  };\n});\nconst ScopedCssBaseline = /*#__PURE__*/React.forwardRef(function ScopedCssBaseline(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiScopedCssBaseline'\n  });\n  const {\n    className,\n    component = 'div',\n    enableColorScheme,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ScopedCssBaselineRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ScopedCssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   */\n  enableColorScheme: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ScopedCssBaseline;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}