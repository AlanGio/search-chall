{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return {\n      ...styles.root,\n      ...(ownerState.color === 'secondary' && styles.colorSecondary),\n      ...(ownerState.filled && styles.filled)\n    };\n  }\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  ...theme.typography.body1,\n  lineHeight: '1.4375em',\n  padding: 0,\n  position: 'relative',\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${formLabelClasses.focused}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    props: {},\n    style: {\n      [`&.${formLabelClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.text.disabled\n      },\n      [`&.${formLabelClasses.error}`]: {\n        color: (theme.vars || theme).palette.error.main\n      }\n    }\n  }]\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n    children,\n    className,\n    color,\n    component = 'label',\n    disabled,\n    error,\n    filled,\n    focused,\n    required,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = {\n    ...props,\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","map":{"version":3,"names":["React","PropTypes","clsx","composeClasses","formControlState","useFormControl","capitalize","styled","useDefaultProps","formLabelClasses","getFormLabelUtilityClasses","jsxs","_jsxs","useUtilityClasses","ownerState","classes","color","focused","disabled","error","filled","required","slots","root","asterisk","FormLabelRoot","name","slot","overridesResolver","styles","colorSecondary","theme","vars","palette","text","secondary","typography","body1","lineHeight","padding","position","variants","Object","entries","filter","value","main","map","props","style","AsteriskComponent","FormLabel","forwardRef","inProps","ref","children","className","component","other","muiFormControl","fcs","states","as","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","oneOf","elementType","bool","sx","arrayOf","func"],"sources":["/Users/alangiojelli/Repos/coding-challenge-search-ui/node_modules/@mui/material/FormLabel/FormLabel.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return {\n      ...styles.root,\n      ...(ownerState.color === 'secondary' && styles.colorSecondary),\n      ...(ownerState.filled && styles.filled)\n    };\n  }\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  ...theme.typography.body1,\n  lineHeight: '1.4375em',\n  padding: 0,\n  position: 'relative',\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${formLabelClasses.focused}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    props: {},\n    style: {\n      [`&.${formLabelClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.text.disabled\n      },\n      [`&.${formLabelClasses.error}`]: {\n        color: (theme.vars || theme).palette.error.main\n      }\n    }\n  }]\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n    children,\n    className,\n    color,\n    component = 'label',\n    disabled,\n    error,\n    filled,\n    focused,\n    required,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = {\n    ...props,\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}