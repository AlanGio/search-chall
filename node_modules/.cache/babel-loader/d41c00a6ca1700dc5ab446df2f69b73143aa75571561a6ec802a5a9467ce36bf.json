{"ast":null,"code":"import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\n// TODO v7: remove this transformation\nexport const colorTransformations = {\n  textPrimary: 'text.primary',\n  textSecondary: 'text.secondary',\n  // For main palette, the color will be applied by the styles above.\n  primary: null,\n  secondary: null,\n  error: null,\n  info: null,\n  success: null,\n  warning: null\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  let transformedColor = colorTransformations[ownerState.color];\n  if (transformedColor === null) {\n    return null;\n  }\n  if (transformedColor === undefined) {\n    transformedColor = ownerState.color;\n  }\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","map":{"version":3,"names":["getPath","alpha","colorTransformations","textPrimary","textSecondary","primary","secondary","error","info","success","warning","getTextDecoration","theme","ownerState","transformedColor","color","undefined","channelColor"],"sources":["/Users/alangiojelli/Repos/coding-challenge-search-ui/node_modules/@mui/material/Link/getTextDecoration.js"],"sourcesContent":["import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\n// TODO v7: remove this transformation\nexport const colorTransformations = {\n  textPrimary: 'text.primary',\n  textSecondary: 'text.secondary',\n  // For main palette, the color will be applied by the styles above.\n  primary: null,\n  secondary: null,\n  error: null,\n  info: null,\n  success: null,\n  warning: null\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  let transformedColor = colorTransformations[ownerState.color];\n  if (transformedColor === null) {\n    return null;\n  }\n  if (transformedColor === undefined) {\n    transformedColor = ownerState.color;\n  }\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,KAAK,QAAQ,8BAA8B;AACpD;AACA,OAAO,MAAMC,oBAAoB,GAAG;EAClCC,WAAW,EAAE,cAAc;EAC3BC,aAAa,EAAE,gBAAgB;EAC/B;EACAC,OAAO,EAAE,IAAI;EACbC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;AACX,CAAC;AACD,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,KAAK;EACLC;AACF,CAAC,KAAK;EACJ,IAAIC,gBAAgB,GAAGZ,oBAAoB,CAACW,UAAU,CAACE,KAAK,CAAC;EAC7D,IAAID,gBAAgB,KAAK,IAAI,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,IAAIA,gBAAgB,KAAKE,SAAS,EAAE;IAClCF,gBAAgB,GAAGD,UAAU,CAACE,KAAK;EACrC;EACA,MAAMA,KAAK,GAAGf,OAAO,CAACY,KAAK,EAAG,WAAUE,gBAAiB,EAAC,EAAE,KAAK,CAAC,IAAID,UAAU,CAACE,KAAK;EACtF,MAAME,YAAY,GAAGjB,OAAO,CAACY,KAAK,EAAG,WAAUE,gBAAiB,SAAQ,CAAC;EACzE,IAAI,MAAM,IAAIF,KAAK,IAAIK,YAAY,EAAE;IACnC,OAAQ,QAAOA,YAAa,SAAQ;EACtC;EACA,OAAOhB,KAAK,CAACc,KAAK,EAAE,GAAG,CAAC;AAC1B,CAAC;AACD,eAAeJ,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}