{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from '../createTheme';\nimport styleFunctionSx from '../styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, {\n  ownerState,\n  ...props\n}) {\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle({\n    ownerState,\n    ...props\n  }) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, {\n      ownerState,\n      ...props\n    }));\n  }\n  const mergedState = {\n    ...props,\n    ...ownerState,\n    ownerState\n  };\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n      variants = [],\n      ...otherStyles\n    } = resolvedStylesArg;\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(mergedState);\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if (ownerState?.[key] !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(mergedState) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx({\n      ...props,\n      theme: resolveTheme({\n        ...props,\n        defaultTheme,\n        themeId\n      })\n    });\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !style?.__mui_systemSx));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label,\n      ...options\n    });\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, {\n          ...props,\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        });\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme({\n            ...props,\n            defaultTheme,\n            themeId\n          });\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, {\n              ...props,\n              theme\n            });\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme({\n            ...props,\n            defaultTheme,\n            themeId\n          });\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, {\n            ...props,\n            theme\n          });\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","map":{"version":3,"names":["styledEngineStyled","internal_processStyles","processStyles","isPlainObject","capitalize","getDisplayName","createTheme","styleFunctionSx","isEmpty","obj","Object","keys","length","isStringTag","tag","charCodeAt","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","resolveTheme","defaultTheme","theme","themeId","defaultOverridesResolver","slot","props","styles","processStyleArg","callableStyle","ownerState","resolvedStylesArg","Array","isArray","flatMap","resolvedStyle","mergedState","variants","otherStyles","result","forEach","variant","isMatch","key","push","style","createStyled","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","__mui_systemSx","inputOptions","filter","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","options","undefined","label","process","env","NODE_ENV","shouldForwardPropOption","defaultStyledResolver","transformStyleArg","stylesArg","__emotion_real","muiStyledResolver","styleArg","expressions","transformedStyleArg","expressionsWithDefaultTheme","map","components","styleOverrides","resolvedStyleOverrides","entries","slotKey","slotStyle","themeVariants","numOfCustomFnsApplied","placeholders","fill","raw","Component","displayName","muiName","withConfig"],"sources":["/Users/alangiojelli/Repos/coding-challenge-search-ui/node_modules/@mui/system/createStyled/createStyled.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from '../createTheme';\nimport styleFunctionSx from '../styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, {\n  ownerState,\n  ...props\n}) {\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle({\n    ownerState,\n    ...props\n  }) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, {\n      ownerState,\n      ...props\n    }));\n  }\n  const mergedState = {\n    ...props,\n    ...ownerState,\n    ownerState\n  };\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n      variants = [],\n      ...otherStyles\n    } = resolvedStylesArg;\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(mergedState);\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if (ownerState?.[key] !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(mergedState) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx({\n      ...props,\n      theme: resolveTheme({\n        ...props,\n        defaultTheme,\n        themeId\n      })\n    });\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !style?.__mui_systemSx));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label,\n      ...options\n    });\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, {\n          ...props,\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        });\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme({\n            ...props,\n            defaultTheme,\n            themeId\n          });\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, {\n              ...props,\n              theme\n            });\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme({\n            ...props,\n            defaultTheme,\n            themeId\n          });\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, {\n            ...props,\n            theme\n          });\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}